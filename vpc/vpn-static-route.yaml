---
AWSTemplateFormatVersion: '2010-09-09'

Description: 'VPC: Add Static Route over VPN Connection to Route Tables'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'Parent Stacks'
        Parameters:
          - ParentVPCStack
          - ParentVPNStack

      - Label:
          default: 'VPC Parameters'
        Parameters:
          - NumberAZs
          - VPCTier
          - StaticRoute

Conditions:
  Have4AZs: !Equals [!Ref NumberAZs, 4]
  Have3AZs: !Or [!Condition Have4AZs, !Equals [!Ref NumberAZs, 3]]

Parameters:
  ParentVPCStack:
    Description: 'Stack name of parent VPC stack based on vpc/vpc-*azs.yaml template.'
    Type: String

  ParentVPNStack:
    Description: 'Stack name of parent VPN stack based on vpc/vpc-vpn-gateway.yaml template.'
    Type: String

  NumberAZs:
    Description: 'Number of Availability Zones'
    Type: Number
    Default: 2
    AllowedValues: [2, 3, 4]

  VPCTier:
    Description: 'Which VPC Tier'
    Type: String
    Default: Public
    AllowedValues: ['Public','Private','Data']

  StaticRoute:
    Description: 'Static CIDR to route'
    Type: String
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid CIDR range of the form x.x.x.x/x.

Resources:
  AZARoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref StaticRoute
      GatewayId:
        Fn::ImportValue: !Sub "${ParentVPNStack}-VPNGateway"
      RouteTableId:
        Fn::ImportValue: !Sub "${ParentVPCStack}-RouteTableA${VPCTier}"

  AZBRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref StaticRoute
      GatewayId:
        Fn::ImportValue: !Sub "${ParentVPNStack}-VPNGateway"
      RouteTableId:
        Fn::ImportValue: !Sub "${ParentVPCStack}-RouteTableB${VPCTier}"

  AZCRoute:
    Condition: Have3AZs
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref StaticRoute
      GatewayId:
        Fn::ImportValue: !Sub "${ParentVPNStack}-VPNGateway"
      RouteTableId:
        Fn::ImportValue: !Sub "${ParentVPCStack}-RouteTableC${VPCTier}"

  AZDRoute:
    Condition: Have4AZs
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !Ref StaticRoute
      GatewayId:
        Fn::ImportValue: !Sub "${ParentVPNStack}-VPNGateway"
      RouteTableId:
        Fn::ImportValue: !Sub "${ParentVPCStack}-RouteTableD${VPCTier}"
